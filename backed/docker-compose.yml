version: "3.8"
services:
    php:
        build:
            context: .
            target: php
            args:
                - APP_ENV=${APP_ENV}
        environment:
            - APP_ENV=${APP_ENV}
            - CONTAINER_ROLE=app
        working_dir: /var/www
        volumes:
            - ./:/var/www
        ports:
            - 8080:8000  # Map container port 8000 to local port 8080
        depends_on:
            - database
            - redis

    websocket:
        build:
            context: .
            target: php
            args:
                - APP_ENV=${APP_ENV}
        environment:
            - APP_ENV=${APP_ENV}
            - CONTAINER_ROLE=websocket
        working_dir: /var/www
        volumes:
            - ./:/var/www
        ports:
            - 6002:6001  # Map container port 6001 to local port 6002
        depends_on:
            - database
            - redis

    database:
        image: mysql:8.0
        ports:
            - 3307:3306  # Map container port 3306 to local port 3307
        environment:
            - MYSQL_DATABASE=${DB_DATABASE}
            - MYSQL_USER=${DB_USERNAME}
            - MYSQL_PASSWORD=${DB_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
        volumes:
            - db-data:/var/lib/mysql

    redis:
        image: redis:alpine
        command: redis-server --appendonly yes
        ports:
            - 6380:6379  # Map container port 6379 to local port 6380

    queue:
        build:
            context: .
            target: php
            args:
                - APP_ENV=${APP_ENV}
        environment:
            - APP_ENV=${APP_ENV}
            - CONTAINER_ROLE=queue
        working_dir: /var/www
        volumes:
            - ./:/var/www

volumes:
    db-data:
